运行
python back.py



读取csv文件，文件与该脚本放在同个文件夹下，成功返回json文本，失败返回0.
无需参数，默认同目录下
http://127.0.0.1:8833/read?func=read&path
传入路径
http://127.0.0.1:8833/read?func=read&path=C:\Users\dhujq\Desktop\DB\my\脚本_合并_new




修改节点（传入的new_node参数为str类型，一次只能改一个节点），成功返回1，失败返回0.
fill无#,需要再次处理
http://127.0.0.1:8833/update?func=update&new_node={"id":10,"labels":"C2","x":31,"y":451,"width":80,"height":40,"shape":"circle","text":"中继站台","attrs":{"body":{"fill":"000000"}},"isReserved":0}



删除节点2或4,该节点有备份节点，备份节点为0
成功返回json文本，失败返回0.
http://127.0.0.1:8833/delete?func=delete&node_id=2


删除节点1,该节点有接替节点，接替节点为6
成功返回json文本，失败返回0.
http://127.0.0.1:8833/delete?func=delete&node_id=1


删除节点10，成功返回json文本，失败返回0.
http://127.0.0.1:8833/delete?func=delete&node_id=10




保存结果，成功返回1，失败返回0.
无需参数，默认同目录下
http://127.0.0.1:8833/save?func=save&path
传入路径
http://127.0.0.1:8833/read?func=read&path=C:\Users\dhujq\Desktop\DB\my\脚本



得出图谱评估结果
无需参数
http://127.0.0.1:8833/assess?func=assess



生成每个节点的贡献度，并查找关键点
需要先执行read访问一个图谱，再输入阈值threshold
返回格式：在read函数返回的json基础上，对每个节点增加了contribution和is_critical两个字段，分别表示节点贡献度，以及该节点是否为关键节点
http://127.0.0.1:8833/assess?func=critical_nodes&threshold=0.0

将所有节点按照pagerank排序，并查找关键点
需要先执行read访问一个图谱，再输入排名阈值n作为判断关键点的标准
返回格式：在read函数返回的json基础上，对每个节点增加了page_rank和critical_page两个字段，分别表示节点重要性排名，以及该节点是否排名前n
http://127.0.0.1:8833/assess?func=page_rank&top_n=6
